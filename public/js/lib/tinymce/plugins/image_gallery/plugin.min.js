/**
 * Chris Troutner 
 * https://github.com/skagitpublishing/connextCMS
 */ 


/**
 * Example plugin that adds a toolbar button and menu item.
 */
tinymce.PluginManager.add('image_gallery', function(editor, url) {
	// Add a button that opens a window
	editor.addButton('image_gallery', {
		icon: 'image',
    tooltip: 'Insert/edit image',
		onclick: function() {
			//debugger;
      
      // Open window
			editor.windowManager.open({
        title: 'Image Library',
				url: url + '/dialog.html',
				width: 800,
				height: 400,
        buttons: [
					{
						text: 'Insert',            
            onclick: function() {
              //debugger;
              
              //Wrap the insertion of an image in an 'undo' function.
              editor.undoManager.transact(function() {
                //debugger;
                
                try {

                  top.log.push('Insert button pressed in image_gallery plug of TinyMCE.');
                  
                  //Retrieve a handle for the dialog window.
                  var win = editor.windowManager.getWindows()[0];

                  //If no image was selected, then exit.
                  if( top.global.tinymce.selectedImage == null ) {
                    win.close();
                    return;
                  }


                  //Retrieve the values of the input fields.
                  var imageSize = win.getContentWindow().document.getElementById('imageSize').value;
                  var altTag = win.getContentWindow().document.getElementById('altTag').value;
                  var caption = win.getContentWindow().document.getElementById('caption').value;
                  var imgAlign = win.getContentWindow().document.getElementById('imageAlign').value;

                  //Retrive the parent and child image models for the selected image.
                  var thisImage = top.global.thumbnailImageCollection.models[top.global.tinymce.selectedImage];

                  var parentImageGUID = thisImage.get('parent');
                  if(parentImageGUID == "")
                    var parentImage = thisImage;
                  else
                    var parentImage = top.global.imageUploadCollection.get(parentImageGUID);

                  var childrenGUIDs = parentImage.get('children').split(',');
                  
                  var imageModel;
                  var divWidth;
                  if( imageSize == "300px" ) {
                    imageModel = top.global.imageUploadCollection.get(childrenGUIDs[0]);
                    divWidth = "300px";
                  }
                  else if( imageSize == "600px" ) {
                    imageModel = top.global.imageUploadCollection.get(childrenGUIDs[1]);
                    divWidth = "600px";
                  }
                  else if( imageSize == "1200px" ) {
                    imageModel = top.global.imageUploadCollection.get(childrenGUIDs[2]);
                    divWidth = "1200px";
                  }
                  else {
                    //debugger;
                    imageModel = parentImage;
                    divWidth = parentImage.get('width')+"px";
                  }
                  //var imageURL = 'http://'+top.global.serverIp+':'+top.global.serverPort+imageModel.attributes.image.path.slice(6)+'/'+imageModel.attributes.image.filename;
                  var imageURL = imageModel.attributes.url;

                  var preHTML = "";
                  var postHTML = "";

                  //Handle Alignment
                  if( imgAlign == "center" ) {
                    preHTML = "<div class='center-block' style='text-align: center; width: "+divWidth+"; border-style: solid; border-width: 1px;'>";
                    postHTML = "</div>";
                  } else if( imgAlign == "right") {
                    preHTML = "<div style='float: right; width: "+divWidth+"; border-style: solid; border-width: 1px;'>";
                    postHTML = "</div>";
                  } else if( imgAlign == "left") {
                    preHTML = "<div style='float: left; width: "+divWidth+"; border-style: solid; border-width: 1px;'>";
                    postHTML = "</div>";
                  }

                  //Handle a caption
                  if( caption != "" ) {
                    preHTML = preHTML+'<figure class="image">';
                    postHTML = '<figcaption>'+caption+'</figcaption></figure>'+postHTML;
                  }

                  tinymce.activeEditor.selection.setContent(preHTML+'<img src="'+imageURL+'" class="img-responsive" />'+postHTML);
                  
                  // Close the window
                  win.close();

                } catch(err) {
                  console.error('Error while trying to insert image in image_gallery plugin for TinyMCE. Error message: ');
                  console.error(err.message);

                  log.push('Error while trying to insert image in image_gallery plugin for TinyMCE. Error message: ');
                  log.push(err.message);
                  sendLog();
                }
              });
              
							
						}
            
					},

					{text: 'Close', onclick: 'close'}
				],

			});
      
		}
	});

});